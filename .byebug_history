continue
c
tweet[language.to_sym]
tweet.send([language.to_sym])
tweet.send language
language.class
language
tweet.send([language])
tweet.send [language]
tweet.send language
language
:language
tweet.send :language
tweet[:emoji]
tweet['emoji']
tweet.emoji
tweet_emoji
tweet
pretty_print(tweet)
tweet.pretty_print
tweet.prettify
tweet.to_yaml
tweet
c
locals
c
locals
loc
locals
c
@translated
c
@translated.first.class
@translated.first['tweet_text_with_info']
@translated.first.tweet_text_with_info
@translated.first.tweet_text_with_infp
@translated.first
@translated
@tweets.first.methods | grep emoji
@tweets.first.methods(false)
@tweets.first.methods
@tweets.first#rus
@tweets.first#russian
@tweets.first#emoji.methods
@tweets.first#emoji.public_methods
@tweets.first#emoji
@tweets.first.emoji
@tweets.first['emoji']
@tweets.first.include?
@tweets.first
@tweets.forst
@tweets
c
@tweets.include?(:emoji)
@tweets.contains
@tweets.contains?
@tweets
c
@tweets.first.private_methods
@tweets[1]
@tweets.first
@tweets.count
@tweets.class
typeof(@tweets)
@tweets.typeof
@tweets.type
@tweets.private_methods
@tweets.any?
@tweets
@tweets = $twitter_client.search(search_term, result_type: "recent").take(5).collect
@tweets.any?
@tweets
